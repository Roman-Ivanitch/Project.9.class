/*****************************************************************************   
 *    Автор: Обушенков Алексей Андреевич 
 *    Группа в ВК https://vk.com/engineer24
 *    Канал на YouTube https://www.youtube.com/channel/UCih0Gcl9IEdkR8deDJCiodg
 *    Инженерка Engineering room
 *    
 *    
 *****************************************************************************
 * Скетч собран по материалам сайта http://docs.blynk.cc/
 *****************************************************************************
 * Модули в составе проекта
 * ESP8266 - 12E WIFI RobotDyn (3.68 $) https://goo.gl/k6TRUz
 * ESP8266 - 12E WIFI GREAT WALL (3.44 $) https://goo.gl/DcqYMg
 *  
 * Датчики для улицы:
 *  DHT 11 (1.00 $) https://goo.gl/sCBn3d  Тут дешево но долго шло
 *  DHT 11 (3.11 $) https://goo.gl/rBFbBD  Тут дороже но дойдет быстрее
 *  Желательно брать этот, скоро будет вариант и с ним.
 *  GY-BME280-3.3 (3.78 $) https://goo.gl/1eyGmg
 *  
 * Модуль часов реального времени
 *  DS3231 Модуль RTC (1.95 $) https://goo.gl/3jMusY
 *  RTC DS3231 (часы реального времени)RobotDyn + аккумулятор (2.90 $) https://goo.gl/gGMRak
 *  
 * Датчики температуры в помещении и в полу
 *  DS18B20 Датчик на плате (2.11 $) https://goo.gl/T4AmmR
 *  DS18B20 Датчик температуры в корпусе (2.07 $) https://goo.gl/HmbgWM
 *  
 * Реле (выбор реле зависит от мощности нагрузки) 
 *  1-канальное реле с управлением Высоким и Низким уровнем 10Ампер (0,99 $) https://goo.gl/SnFuXY
 *  1-канальное реле с управлением Высоким и Низким уровнем 30Ампер (3.96 $) https://goo.gl/PW1uYL
 * 
 *****************************************************************************
 * Библиотеки
 *****************************************************************************
 * BLYNK   
 *    http://docs.blynk.cc/#downloads-blynk-library
 *   
 *****************************************************************************
 * В чем суть скетча
 *****************************************************************************
 *  При обрыве Интернета по любой причине, было бы неплохо, что бы наше устройство переподключилось.
 *  Раздельно отслеживается подключение к WiFi и серверу Blynk.
 *  Есть вкладка Connect.h в ней можно указать каким сервером пользоваться (Основной или Локальный)
 *  Там же задается Токен и Лоин с Паролем от WiFi
 *  Там же все функции отвечающие за подключение.
 *  
 *  Но это не панацея, так как наш ESP8266 однозадачный (однопоточный), то весь скетч будет подвисать
 *  на какое то время при попытке переподключения.
 *  
 *  К примеру в этом скетче каждые 10 секунд (лучше установить побольше например 30), 
 *  будет проверятся есть ли связь с сервером Blynk и если нет будем пытаться переподключится,
 *  но если это невозможно (да да же если и возможно), то 5 секунд, 
 *  а то и больше наша ESP !!! НИЧЕГО НЕ БУДЕТ БОЛЬШЕ ДЕЛАТЬ!!!. Будет только подключаться к Blynk.
 *  Равносильно delay думаю так понятней.
 */

/* Закомментируйте это, чтобы отключить BLYNK_LOG и сэкономить место */
#define BLYNK_PRINT Serial


#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

#include "Connect.h" // Подключаем вкладку Connect.h

BlynkTimer timer;

/////////////////////////////////////////
//               База GPIO             //
const int8_t PIN_LED = D5; // PIN Мигалки

/////////////////////////////////////////
//      База Виртуальных PIN -ов       //
#define VPIN_LABELVALUE V0  // VPIN виджета Label Value



/////////////////////////////////////////
//            Код программы            //

// Какая то функция или много функций
void Random()
{
  // Меняем состояние светодиода
  digitalWrite(PIN_LED, !digitalRead(PIN_LED));

// Получаем рандомные значения иметируем датчик температуры к примеру
// и отправляем данные в виджет Label Value
  
//*********Код для получение рандомных значений*******************
//**************************Начало********************************
  static int x = random (100, 200);
  static int i = 2000;
  float T;
    if (i > -1) {
    i = i + x;
    T=(float)i/100;
    if (i >= 4000) x = -random (100, 200);    // переключение управления на максимуме
    if (i <= 2000) x = random (100, 200);    // переключение управления на максимуме
    }
//*********Код для получение рандомных значений*******************
//**************************Конец*********************************        

//**************************Отправка данных вариант 1******************
// Отправка данных в Blynk в настройках Виджета
// находим REDIN RATE и выставляем PUSH. !!!!Только!!!!PUSH!!!!
// так как, лично мое мнение, пусть частотой опроса датчика управляет железо
// а не приложение
   BLYNK_LOG("Random");
   Blynk.virtualWrite(VPIN_LABELVALUE, T);
}

void setup()
{
// Настраиваем GPIO  
  pinMode(PIN_LED, OUTPUT);
  
// Открываем Сериал монитор
  Serial.begin(9600);
  Serial.println("ESP Start");
  Serial.println("ESP Start");
  Serial.println("ESP Start");

// Вызываем функцию подключения к Blynk
  reconnectBlynk();

// Настраеваем таймеры  
  timer.setInterval(1000, Random);
  timer.setInterval(10000, reconnectBlynk);
}

void loop()
{
  if (Blynk.connected()){ Blynk.run();} 
  timer.run();
}

